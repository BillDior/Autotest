# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'add_test_ui.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
import overload
class Ui_Add_test(object):
    def setupUi(self, Add_test):
        Add_test.setObjectName("Add_test")
        Add_test.resize(678, 663)
        self.tabWidget = QtWidgets.QTabWidget(Add_test)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 681, 351))
        self.tabWidget.setMinimumSize(QtCore.QSize(681, 351))
        self.tabWidget.setMaximumSize(QtCore.QSize(681, 351))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.tabWidget.setFont(font)
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setObjectName("tabWidget")
        self.single_point_touch_test = QtWidgets.QWidget()
        self.single_point_touch_test.setObjectName("single_point_touch_test")
        self.gridLayout = QtWidgets.QGridLayout(self.single_point_touch_test)
        self.gridLayout.setObjectName("gridLayout")
        self.single_point_touch_test1 = QtWidgets.QGridLayout()
        self.single_point_touch_test1.setObjectName("single_point_touch_test1")
        self.v_touch_pos_y = QtWidgets.QLineEdit(self.single_point_touch_test)
        self.v_touch_pos_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_touch_pos_y.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_touch_pos_y.setObjectName("v_touch_pos_y")
        self.single_point_touch_test1.addWidget(self.v_touch_pos_y, 0, 2, 1, 1)
        self.touch_num = QtWidgets.QLabel(self.single_point_touch_test)
        self.touch_num.setObjectName("touch_num")
        self.single_point_touch_test1.addWidget(self.touch_num, 1, 0, 1, 1)
        self.v_touch_pos_x = QtWidgets.QLineEdit(self.single_point_touch_test)
        self.v_touch_pos_x.setMinimumSize(QtCore.QSize(150, 30))
        self.v_touch_pos_x.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_touch_pos_x.setObjectName("v_touch_pos_x")
        self.single_point_touch_test1.addWidget(self.v_touch_pos_x, 0, 1, 1, 1)
        self.touch_i_time = QtWidgets.QLabel(self.single_point_touch_test)
        self.touch_i_time.setObjectName("touch_i_time")
        self.single_point_touch_test1.addWidget(self.touch_i_time, 2, 0, 1, 1)
        self.v_touch_num = QtWidgets.QLineEdit(self.single_point_touch_test)
        self.v_touch_num.setMinimumSize(QtCore.QSize(0, 30))
        self.v_touch_num.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_touch_num.setObjectName("v_touch_num")
        self.single_point_touch_test1.addWidget(self.v_touch_num, 1, 1, 1, 1)
        self.v_touch_i_time = QtWidgets.QLineEdit(self.single_point_touch_test)
        self.v_touch_i_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_touch_i_time.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_touch_i_time.setObjectName("v_touch_i_time")
        self.single_point_touch_test1.addWidget(self.v_touch_i_time, 2, 1, 1, 1)
        self.touch_pos = QtWidgets.QLabel(self.single_point_touch_test)
        self.touch_pos.setObjectName("touch_pos")
        self.single_point_touch_test1.addWidget(self.touch_pos, 0, 0, 1, 1)
        self.gridLayout.addLayout(self.single_point_touch_test1, 0, 0, 1, 1)
        self.tabWidget.addTab(self.single_point_touch_test, "")
        self.single_point_press_test = QtWidgets.QWidget()
        self.single_point_press_test.setObjectName("single_point_press_test")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.single_point_press_test)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.single_point_press_test1 = QtWidgets.QGridLayout()
        self.single_point_press_test1.setObjectName("single_point_press_test1")
        self.press_num = QtWidgets.QLabel(self.single_point_press_test)
        self.press_num.setObjectName("press_num")
        self.single_point_press_test1.addWidget(self.press_num, 2, 0, 1, 1)
        self.v_press_pos_y = QtWidgets.QLineEdit(self.single_point_press_test)
        self.v_press_pos_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_pos_y.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_press_pos_y.setObjectName("v_press_pos_y")
        self.single_point_press_test1.addWidget(self.v_press_pos_y, 0, 2, 1, 1)
        self.v_press_pos_x = QtWidgets.QLineEdit(self.single_point_press_test)
        self.v_press_pos_x.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_pos_x.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_press_pos_x.setObjectName("v_press_pos_x")
        self.single_point_press_test1.addWidget(self.v_press_pos_x, 0, 1, 1, 1)
        self.v_press_num = QtWidgets.QLineEdit(self.single_point_press_test)
        self.v_press_num.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_num.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_press_num.setObjectName("v_press_num")
        self.single_point_press_test1.addWidget(self.v_press_num, 2, 1, 1, 1)
        self.press_pos = QtWidgets.QLabel(self.single_point_press_test)
        self.press_pos.setObjectName("press_pos")
        self.single_point_press_test1.addWidget(self.press_pos, 0, 0, 1, 1)
        self.v_press_time = QtWidgets.QLineEdit(self.single_point_press_test)
        self.v_press_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_time.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_press_time.setObjectName("v_press_time")
        self.single_point_press_test1.addWidget(self.v_press_time, 1, 1, 1, 1)
        self.press_time = QtWidgets.QLabel(self.single_point_press_test)
        self.press_time.setObjectName("press_time")
        self.single_point_press_test1.addWidget(self.press_time, 1, 0, 1, 1)
        self.v_press_i_time = QtWidgets.QLineEdit(self.single_point_press_test)
        self.v_press_i_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_i_time.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_press_i_time.setObjectName("v_press_i_time")
        self.single_point_press_test1.addWidget(self.v_press_i_time, 3, 1, 1, 1)
        self.press_i_time = QtWidgets.QLabel(self.single_point_press_test)
        self.press_i_time.setObjectName("press_i_time")
        self.single_point_press_test1.addWidget(self.press_i_time, 3, 0, 1, 1)
        self.gridLayout_2.addLayout(self.single_point_press_test1, 0, 0, 1, 1)
        self.tabWidget.addTab(self.single_point_press_test, "")
        self.multi_touch_test = QtWidgets.QWidget()
        self.multi_touch_test.setObjectName("multi_touch_test")
        self.v_m_touch_pos_x = QtWidgets.QLineEdit(self.multi_touch_test)
        self.v_m_touch_pos_x.setGeometry(QtCore.QRect(154, 107, 167, 30))
        self.v_m_touch_pos_x.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_touch_pos_x.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_m_touch_pos_x.setObjectName("v_m_touch_pos_x")
        self.v_m_touch_pos_y = QtWidgets.QLineEdit(self.multi_touch_test)
        self.v_m_touch_pos_y.setGeometry(QtCore.QRect(326, 107, 166, 30))
        self.v_m_touch_pos_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_touch_pos_y.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_m_touch_pos_y.setObjectName("v_m_touch_pos_y")
        self.multiTouchNextPointButton = QtWidgets.QPushButton(self.multi_touch_test)
        self.multiTouchNextPointButton.setEnabled(False)
        self.multiTouchNextPointButton.setGeometry(QtCore.QRect(499, 107, 144, 30))
        self.multiTouchNextPointButton.setMinimumSize(QtCore.QSize(0, 30))
        self.multiTouchNextPointButton.setMaximumSize(QtCore.QSize(16777215, 30))
        self.multiTouchNextPointButton.setObjectName("multiTouchNextPointButton")
        self.layoutWidget = QtWidgets.QWidget(self.multi_touch_test)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 40, 431, 32))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.m_touch_point_num = QtWidgets.QLabel(self.layoutWidget)
        self.m_touch_point_num.setObjectName("m_touch_point_num")
        self.horizontalLayout_3.addWidget(self.m_touch_point_num)
        self.v_m_touch_point_num = QtWidgets.QSpinBox(self.layoutWidget)
        self.v_m_touch_point_num.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_touch_point_num.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.v_m_touch_point_num.setFont(font)
        self.v_m_touch_point_num.setMinimum(1)
        self.v_m_touch_point_num.setMaximum(10)
        self.v_m_touch_point_num.setProperty("value", 1)
        self.v_m_touch_point_num.setObjectName("v_m_touch_point_num")
        self.horizontalLayout_3.addWidget(self.v_m_touch_point_num)
        self.confirmMultiTouchTestButton = QtWidgets.QPushButton(self.layoutWidget)
        self.confirmMultiTouchTestButton.setMinimumSize(QtCore.QSize(0, 30))
        self.confirmMultiTouchTestButton.setMaximumSize(QtCore.QSize(16777215, 30))
        self.confirmMultiTouchTestButton.setObjectName("confirmMultiTouchTestButton")
        self.horizontalLayout_3.addWidget(self.confirmMultiTouchTestButton)
        self.pointSelectComboBox = QtWidgets.QComboBox(self.multi_touch_test)
        self.pointSelectComboBox.setGeometry(QtCore.QRect(10, 110, 131, 21))
        self.pointSelectComboBox.setAutoFillBackground(True)
        self.pointSelectComboBox.setEditable(False)
        self.pointSelectComboBox.setDuplicatesEnabled(False)
        self.pointSelectComboBox.setFrame(True)
        self.pointSelectComboBox.setObjectName("pointSelectComboBox")
        self.pointSelectComboBox.addItem("")
        self.layoutWidget1 = QtWidgets.QWidget(self.multi_touch_test)
        self.layoutWidget1.setGeometry(QtCore.QRect(10, 170, 311, 132))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.formLayout = QtWidgets.QFormLayout(self.layoutWidget1)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setVerticalSpacing(20)
        self.formLayout.setObjectName("formLayout")
        self.m_touch_i_time = QtWidgets.QLabel(self.layoutWidget1)
        self.m_touch_i_time.setObjectName("m_touch_i_time")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.m_touch_i_time)
        self.v_m_touch_i_time = QtWidgets.QLineEdit(self.layoutWidget1)
        self.v_m_touch_i_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_touch_i_time.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_m_touch_i_time.setObjectName("v_m_touch_i_time")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.v_m_touch_i_time)
        self.m_touch_loop_num = QtWidgets.QLabel(self.layoutWidget1)
        self.m_touch_loop_num.setObjectName("m_touch_loop_num")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.m_touch_loop_num)
        self.v_m_touch_loop_num = QtWidgets.QLineEdit(self.layoutWidget1)
        self.v_m_touch_loop_num.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_touch_loop_num.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_m_touch_loop_num.setObjectName("v_m_touch_loop_num")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.v_m_touch_loop_num)
        self.m_touch_loop_i_time = QtWidgets.QLabel(self.layoutWidget1)
        self.m_touch_loop_i_time.setObjectName("m_touch_loop_i_time")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.m_touch_loop_i_time)
        self.v_m_touch_loop_i_time = QtWidgets.QLineEdit(self.layoutWidget1)
        self.v_m_touch_loop_i_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_touch_loop_i_time.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_m_touch_loop_i_time.setObjectName("v_m_touch_loop_i_time")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.v_m_touch_loop_i_time)
        self.tabWidget.addTab(self.multi_touch_test, "")
        self.random_touch_test = QtWidgets.QWidget()
        self.random_touch_test.setObjectName("random_touch_test")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.random_touch_test)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.random_touch_test1 = QtWidgets.QGridLayout()
        self.random_touch_test1.setObjectName("random_touch_test1")
        self.r_touch_p2 = QtWidgets.QLabel(self.random_touch_test)
        self.r_touch_p2.setObjectName("r_touch_p2")
        self.random_touch_test1.addWidget(self.r_touch_p2, 1, 0, 1, 1)
        self.r_touch_p1 = QtWidgets.QLabel(self.random_touch_test)
        self.r_touch_p1.setObjectName("r_touch_p1")
        self.random_touch_test1.addWidget(self.r_touch_p1, 0, 0, 1, 1)
        self.v_r_touch_p2_y = QtWidgets.QLineEdit(self.random_touch_test)
        self.v_r_touch_p2_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_touch_p2_y.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_touch_p2_y.setObjectName("v_r_touch_p2_y")
        self.random_touch_test1.addWidget(self.v_r_touch_p2_y, 1, 2, 1, 1)
        self.v_r_touch_p2_x = QtWidgets.QLineEdit(self.random_touch_test)
        self.v_r_touch_p2_x.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_touch_p2_x.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_touch_p2_x.setObjectName("v_r_touch_p2_x")
        self.random_touch_test1.addWidget(self.v_r_touch_p2_x, 1, 1, 1, 1)
        self.v_r_touch_p1_x = QtWidgets.QLineEdit(self.random_touch_test)
        self.v_r_touch_p1_x.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_touch_p1_x.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_touch_p1_x.setObjectName("v_r_touch_p1_x")
        self.random_touch_test1.addWidget(self.v_r_touch_p1_x, 0, 1, 1, 1)
        self.r_touch_num = QtWidgets.QLabel(self.random_touch_test)
        self.r_touch_num.setObjectName("r_touch_num")
        self.random_touch_test1.addWidget(self.r_touch_num, 2, 0, 1, 1)
        self.v_r_touch_p1_y = QtWidgets.QLineEdit(self.random_touch_test)
        self.v_r_touch_p1_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_touch_p1_y.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_touch_p1_y.setObjectName("v_r_touch_p1_y")
        self.random_touch_test1.addWidget(self.v_r_touch_p1_y, 0, 2, 1, 1)
        self.r_touch_i_time = QtWidgets.QLabel(self.random_touch_test)
        self.r_touch_i_time.setObjectName("r_touch_i_time")
        self.random_touch_test1.addWidget(self.r_touch_i_time, 3, 0, 1, 1)
        self.v_r_touch_i_time = QtWidgets.QLineEdit(self.random_touch_test)
        self.v_r_touch_i_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_touch_i_time.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_touch_i_time.setObjectName("v_r_touch_i_time")
        self.random_touch_test1.addWidget(self.v_r_touch_i_time, 3, 1, 1, 1)
        self.v_r_touch_num = QtWidgets.QLineEdit(self.random_touch_test)
        self.v_r_touch_num.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_touch_num.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_touch_num.setObjectName("v_r_touch_num")
        self.random_touch_test1.addWidget(self.v_r_touch_num, 2, 1, 1, 1)
        self.gridLayout_4.addLayout(self.random_touch_test1, 0, 0, 1, 1)
        self.tabWidget.addTab(self.random_touch_test, "")
        self.drag_test = QtWidgets.QWidget()
        self.drag_test.setObjectName("drag_test")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.drag_test)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.drag_test1 = QtWidgets.QGridLayout()
        self.drag_test1.setObjectName("drag_test1")
        self.v_drag_p2_y = QtWidgets.QLineEdit(self.drag_test)
        self.v_drag_p2_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_drag_p2_y.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_drag_p2_y.setObjectName("v_drag_p2_y")
        self.drag_test1.addWidget(self.v_drag_p2_y, 1, 2, 1, 1)
        self.drag_p1 = QtWidgets.QLabel(self.drag_test)
        self.drag_p1.setObjectName("drag_p1")
        self.drag_test1.addWidget(self.drag_p1, 0, 0, 1, 1)
        self.v_drag_p2_x = QtWidgets.QLineEdit(self.drag_test)
        self.v_drag_p2_x.setMinimumSize(QtCore.QSize(0, 30))
        self.v_drag_p2_x.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_drag_p2_x.setObjectName("v_drag_p2_x")
        self.drag_test1.addWidget(self.v_drag_p2_x, 1, 1, 1, 1)
        self.v_drag_p1_y = QtWidgets.QLineEdit(self.drag_test)
        self.v_drag_p1_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_drag_p1_y.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_drag_p1_y.setObjectName("v_drag_p1_y")
        self.drag_test1.addWidget(self.v_drag_p1_y, 0, 2, 1, 1)
        self.drag_i_time = QtWidgets.QLabel(self.drag_test)
        self.drag_i_time.setObjectName("drag_i_time")
        self.drag_test1.addWidget(self.drag_i_time, 3, 0, 1, 1)
        self.v_drag_p1_x = QtWidgets.QLineEdit(self.drag_test)
        self.v_drag_p1_x.setMinimumSize(QtCore.QSize(0, 30))
        self.v_drag_p1_x.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_drag_p1_x.setText("")
        self.v_drag_p1_x.setObjectName("v_drag_p1_x")
        self.drag_test1.addWidget(self.v_drag_p1_x, 0, 1, 1, 1)
        self.drag_num = QtWidgets.QLabel(self.drag_test)
        self.drag_num.setObjectName("drag_num")
        self.drag_test1.addWidget(self.drag_num, 2, 0, 1, 1)
        self.v_drag_num = QtWidgets.QLineEdit(self.drag_test)
        self.v_drag_num.setMinimumSize(QtCore.QSize(0, 30))
        self.v_drag_num.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_drag_num.setObjectName("v_drag_num")
        self.drag_test1.addWidget(self.v_drag_num, 2, 1, 1, 1)
        self.drag_p2 = QtWidgets.QLabel(self.drag_test)
        self.drag_p2.setObjectName("drag_p2")
        self.drag_test1.addWidget(self.drag_p2, 1, 0, 1, 1)
        self.v_drag_i_time = QtWidgets.QLineEdit(self.drag_test)
        self.v_drag_i_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_drag_i_time.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_drag_i_time.setObjectName("v_drag_i_time")
        self.drag_test1.addWidget(self.v_drag_i_time, 3, 1, 1, 1)
        self.gridLayout_5.addLayout(self.drag_test1, 0, 0, 1, 1)
        self.tabWidget.addTab(self.drag_test, "")
        self.multi_drag_test = QtWidgets.QWidget()
        self.multi_drag_test.setObjectName("multi_drag_test")
        self.layoutWidget2 = QtWidgets.QWidget(self.multi_drag_test)
        self.layoutWidget2.setGeometry(QtCore.QRect(220, 50, 162, 217))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.layoutWidget2)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.v_m_drag_start_p_x = QtWidgets.QLineEdit(self.layoutWidget2)
        self.v_m_drag_start_p_x.setMinimumSize(QtCore.QSize(160, 30))
        self.v_m_drag_start_p_x.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.v_m_drag_start_p_x.setFont(font)
        self.v_m_drag_start_p_x.setObjectName("v_m_drag_start_p_x")
        self.gridLayout_3.addWidget(self.v_m_drag_start_p_x, 0, 0, 1, 1)
        self.v_m_drag_end_p_x = QtWidgets.QLineEdit(self.layoutWidget2)
        self.v_m_drag_end_p_x.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_drag_end_p_x.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.v_m_drag_end_p_x.setFont(font)
        self.v_m_drag_end_p_x.setText("")
        self.v_m_drag_end_p_x.setObjectName("v_m_drag_end_p_x")
        self.gridLayout_3.addWidget(self.v_m_drag_end_p_x, 1, 0, 1, 1)
        self.v_m_drag_loop_num = QtWidgets.QLineEdit(self.layoutWidget2)
        self.v_m_drag_loop_num.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_drag_loop_num.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.v_m_drag_loop_num.setFont(font)
        self.v_m_drag_loop_num.setObjectName("v_m_drag_loop_num")
        self.gridLayout_3.addWidget(self.v_m_drag_loop_num, 2, 0, 1, 1)
        self.v_m_drag_i_time = QtWidgets.QLineEdit(self.layoutWidget2)
        self.v_m_drag_i_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_drag_i_time.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.v_m_drag_i_time.setFont(font)
        self.v_m_drag_i_time.setObjectName("v_m_drag_i_time")
        self.gridLayout_3.addWidget(self.v_m_drag_i_time, 3, 0, 1, 1)
        self.v_m_drag_time = QtWidgets.QLineEdit(self.layoutWidget2)
        self.v_m_drag_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_drag_time.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.v_m_drag_time.setFont(font)
        self.v_m_drag_time.setObjectName("v_m_drag_time")
        self.gridLayout_3.addWidget(self.v_m_drag_time, 4, 0, 1, 1)
        self.v_m_drag_trip_i_time = QtWidgets.QLineEdit(self.layoutWidget2)
        self.v_m_drag_trip_i_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_drag_trip_i_time.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.v_m_drag_trip_i_time.setFont(font)
        self.v_m_drag_trip_i_time.setObjectName("v_m_drag_trip_i_time")
        self.gridLayout_3.addWidget(self.v_m_drag_trip_i_time, 5, 0, 1, 1)
        self.layoutWidget3 = QtWidgets.QWidget(self.multi_drag_test)
        self.layoutWidget3.setGeometry(QtCore.QRect(390, 50, 162, 69))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.layoutWidget3)
        self.gridLayout_9.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.v_m_drag_end_p_y = QtWidgets.QLineEdit(self.layoutWidget3)
        self.v_m_drag_end_p_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_m_drag_end_p_y.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.v_m_drag_end_p_y.setFont(font)
        self.v_m_drag_end_p_y.setObjectName("v_m_drag_end_p_y")
        self.gridLayout_9.addWidget(self.v_m_drag_end_p_y, 2, 0, 1, 1)
        self.v_m_drag_start_p_y = QtWidgets.QLineEdit(self.layoutWidget3)
        self.v_m_drag_start_p_y.setMinimumSize(QtCore.QSize(160, 30))
        self.v_m_drag_start_p_y.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.v_m_drag_start_p_y.setFont(font)
        self.v_m_drag_start_p_y.setObjectName("v_m_drag_start_p_y")
        self.gridLayout_9.addWidget(self.v_m_drag_start_p_y, 1, 0, 1, 1)
        self.layoutWidget4 = QtWidgets.QWidget(self.multi_drag_test)
        self.layoutWidget4.setGeometry(QtCore.QRect(70, 120, 138, 141))
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.layoutWidget4)
        self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.m_drag_trip_i_time = QtWidgets.QLabel(self.layoutWidget4)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.m_drag_trip_i_time.setFont(font)
        self.m_drag_trip_i_time.setObjectName("m_drag_trip_i_time")
        self.gridLayout_10.addWidget(self.m_drag_trip_i_time, 3, 0, 1, 1)
        self.m_drag_time = QtWidgets.QLabel(self.layoutWidget4)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.m_drag_time.setFont(font)
        self.m_drag_time.setObjectName("m_drag_time")
        self.gridLayout_10.addWidget(self.m_drag_time, 2, 0, 1, 1)
        self.m_drag_i_time = QtWidgets.QLabel(self.layoutWidget4)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.m_drag_i_time.setFont(font)
        self.m_drag_i_time.setObjectName("m_drag_i_time")
        self.gridLayout_10.addWidget(self.m_drag_i_time, 1, 0, 1, 1)
        self.m_drag_loop_num = QtWidgets.QLabel(self.layoutWidget4)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.m_drag_loop_num.setFont(font)
        self.m_drag_loop_num.setObjectName("m_drag_loop_num")
        self.gridLayout_10.addWidget(self.m_drag_loop_num, 0, 0, 1, 1)
        self.layoutWidget5 = QtWidgets.QWidget(self.multi_drag_test)
        self.layoutWidget5.setGeometry(QtCore.QRect(10, 10, 516, 32))
        self.layoutWidget5.setObjectName("layoutWidget5")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.layoutWidget5)
        self.gridLayout_11.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.m_drag_num = QtWidgets.QLabel(self.layoutWidget5)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.m_drag_num.setFont(font)
        self.m_drag_num.setObjectName("m_drag_num")
        self.gridLayout_11.addWidget(self.m_drag_num, 0, 0, 1, 1)
        self.v_m_drag_num = QtWidgets.QSpinBox(self.layoutWidget5)
        self.v_m_drag_num.setMinimumSize(QtCore.QSize(144, 30))
        self.v_m_drag_num.setMaximumSize(QtCore.QSize(144, 144))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.v_m_drag_num.setFont(font)
        self.v_m_drag_num.setMinimum(1)
        self.v_m_drag_num.setMaximum(10)
        self.v_m_drag_num.setProperty("value", 1)
        self.v_m_drag_num.setObjectName("v_m_drag_num")
        self.gridLayout_11.addWidget(self.v_m_drag_num, 0, 1, 1, 1)
        self.confirmMultiDragButton = QtWidgets.QPushButton(self.layoutWidget5)
        self.confirmMultiDragButton.setMinimumSize(QtCore.QSize(0, 30))
        self.confirmMultiDragButton.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.confirmMultiDragButton.setFont(font)
        self.confirmMultiDragButton.setObjectName("confirmMultiDragButton")
        self.gridLayout_11.addWidget(self.confirmMultiDragButton, 0, 2, 1, 1)
        self.multiDragNextButton = QtWidgets.QPushButton(self.multi_drag_test)
        self.multiDragNextButton.setEnabled(False)
        self.multiDragNextButton.setGeometry(QtCore.QRect(560, 90, 116, 30))
        self.multiDragNextButton.setMinimumSize(QtCore.QSize(0, 30))
        self.multiDragNextButton.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.multiDragNextButton.setFont(font)
        self.multiDragNextButton.setObjectName("multiDragNextButton")
        self.layoutWidget6 = QtWidgets.QWidget(self.multi_drag_test)
        self.layoutWidget6.setGeometry(QtCore.QRect(11, 50, 192, 61))
        self.layoutWidget6.setObjectName("layoutWidget6")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.layoutWidget6)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.dragSelectComboBox = QtWidgets.QComboBox(self.layoutWidget6)
        self.dragSelectComboBox.setAutoFillBackground(True)
        self.dragSelectComboBox.setEditable(False)
        self.dragSelectComboBox.setDuplicatesEnabled(False)
        self.dragSelectComboBox.setFrame(True)
        self.dragSelectComboBox.setObjectName("dragSelectComboBox")
        self.dragSelectComboBox.addItem("")
        self.gridLayout_6.addWidget(self.dragSelectComboBox, 0, 0, 1, 1)
        self.m_drag_start_p = QtWidgets.QLabel(self.layoutWidget6)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.m_drag_start_p.setFont(font)
        self.m_drag_start_p.setObjectName("m_drag_start_p")
        self.gridLayout_6.addWidget(self.m_drag_start_p, 0, 1, 1, 1)
        self.m_drag_end_p = QtWidgets.QLabel(self.layoutWidget6)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.m_drag_end_p.setFont(font)
        self.m_drag_end_p.setObjectName("m_drag_end_p")
        self.gridLayout_6.addWidget(self.m_drag_end_p, 1, 1, 1, 1)
        self.tabWidget.addTab(self.multi_drag_test, "")
        self.random_drag_test = QtWidgets.QWidget()
        self.random_drag_test.setObjectName("random_drag_test")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.random_drag_test)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.random_drag_test1 = QtWidgets.QGridLayout()
        self.random_drag_test1.setObjectName("random_drag_test1")
        self.v_r_drag_i_time = QtWidgets.QLineEdit(self.random_drag_test)
        self.v_r_drag_i_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_drag_i_time.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_drag_i_time.setObjectName("v_r_drag_i_time")
        self.random_drag_test1.addWidget(self.v_r_drag_i_time, 3, 1, 1, 1)
        self.r_drag_num = QtWidgets.QLabel(self.random_drag_test)
        self.r_drag_num.setObjectName("r_drag_num")
        self.random_drag_test1.addWidget(self.r_drag_num, 2, 0, 1, 1)
        self.v_r_drag_time = QtWidgets.QLineEdit(self.random_drag_test)
        self.v_r_drag_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_drag_time.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_drag_time.setObjectName("v_r_drag_time")
        self.random_drag_test1.addWidget(self.v_r_drag_time, 4, 1, 1, 1)
        self.randomDragLeftDownPoint = QtWidgets.QLabel(self.random_drag_test)
        self.randomDragLeftDownPoint.setObjectName("randomDragLeftDownPoint")
        self.random_drag_test1.addWidget(self.randomDragLeftDownPoint, 0, 0, 1, 1)
        self.r_drag_time = QtWidgets.QLabel(self.random_drag_test)
        self.r_drag_time.setObjectName("r_drag_time")
        self.random_drag_test1.addWidget(self.r_drag_time, 4, 0, 1, 1)
        self.v_r_drag_start_p_x = QtWidgets.QLineEdit(self.random_drag_test)
        self.v_r_drag_start_p_x.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_drag_start_p_x.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_drag_start_p_x.setText("")
        self.v_r_drag_start_p_x.setObjectName("v_r_drag_start_p_x")
        self.random_drag_test1.addWidget(self.v_r_drag_start_p_x, 0, 1, 1, 1)
        self.v_r_drag_end_p_y = QtWidgets.QLineEdit(self.random_drag_test)
        self.v_r_drag_end_p_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_drag_end_p_y.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_drag_end_p_y.setObjectName("v_r_drag_end_p_y")
        self.random_drag_test1.addWidget(self.v_r_drag_end_p_y, 1, 2, 1, 1)
        self.v_r_drag_start_p_y = QtWidgets.QLineEdit(self.random_drag_test)
        self.v_r_drag_start_p_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_drag_start_p_y.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_drag_start_p_y.setObjectName("v_r_drag_start_p_y")
        self.random_drag_test1.addWidget(self.v_r_drag_start_p_y, 0, 2, 1, 1)
        self.v_r_drag_num = QtWidgets.QLineEdit(self.random_drag_test)
        self.v_r_drag_num.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_drag_num.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_drag_num.setObjectName("v_r_drag_num")
        self.random_drag_test1.addWidget(self.v_r_drag_num, 2, 1, 1, 1)
        self.r_drag_i_time = QtWidgets.QLabel(self.random_drag_test)
        self.r_drag_i_time.setObjectName("r_drag_i_time")
        self.random_drag_test1.addWidget(self.r_drag_i_time, 3, 0, 1, 1)
        self.randomDragRightUpPoint = QtWidgets.QLabel(self.random_drag_test)
        self.randomDragRightUpPoint.setObjectName("randomDragRightUpPoint")
        self.random_drag_test1.addWidget(self.randomDragRightUpPoint, 1, 0, 1, 1)
        self.v_r_drag_end_p_x = QtWidgets.QLineEdit(self.random_drag_test)
        self.v_r_drag_end_p_x.setMinimumSize(QtCore.QSize(0, 30))
        self.v_r_drag_end_p_x.setMaximumSize(QtCore.QSize(16777215, 30))
        self.v_r_drag_end_p_x.setObjectName("v_r_drag_end_p_x")
        self.random_drag_test1.addWidget(self.v_r_drag_end_p_x, 1, 1, 1, 1)
        self.gridLayout_7.addLayout(self.random_drag_test1, 0, 0, 1, 1)
        self.tabWidget.addTab(self.random_drag_test, "")
        self.press_drag_test = QtWidgets.QWidget()
        self.press_drag_test.setObjectName("press_drag_test")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.press_drag_test)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.press_drag_test1 = QtWidgets.QGridLayout()
        self.press_drag_test1.setObjectName("press_drag_test1")
        self.press_drag_i_time = QtWidgets.QLabel(self.press_drag_test)
        self.press_drag_i_time.setObjectName("press_drag_i_time")
        self.press_drag_test1.addWidget(self.press_drag_i_time, 5, 0, 1, 1)
        self.press_drag_d_time = QtWidgets.QLabel(self.press_drag_test)
        self.press_drag_d_time.setObjectName("press_drag_d_time")
        self.press_drag_test1.addWidget(self.press_drag_d_time, 4, 0, 1, 1)
        self.press_drag_p_time = QtWidgets.QLabel(self.press_drag_test)
        self.press_drag_p_time.setObjectName("press_drag_p_time")
        self.press_drag_test1.addWidget(self.press_drag_p_time, 3, 0, 1, 1)
        self.v_press_drag_p_time_2 = QtWidgets.QLineEdit(self.press_drag_test)
        self.v_press_drag_p_time_2.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_drag_p_time_2.setObjectName("v_press_drag_p_time_2")
        self.press_drag_test1.addWidget(self.v_press_drag_p_time_2, 4, 1, 1, 1)
        self.v_press_drag_p_time = QtWidgets.QLineEdit(self.press_drag_test)
        self.v_press_drag_p_time.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_drag_p_time.setObjectName("v_press_drag_p_time")
        self.press_drag_test1.addWidget(self.v_press_drag_p_time, 3, 1, 1, 1)
        self.v_press_drag_num = QtWidgets.QLineEdit(self.press_drag_test)
        self.v_press_drag_num.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_drag_num.setObjectName("v_press_drag_num")
        self.press_drag_test1.addWidget(self.v_press_drag_num, 2, 1, 1, 1)
        self.v_press_drag_end_p_y = QtWidgets.QLineEdit(self.press_drag_test)
        self.v_press_drag_end_p_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_drag_end_p_y.setObjectName("v_press_drag_end_p_y")
        self.press_drag_test1.addWidget(self.v_press_drag_end_p_y, 1, 2, 1, 1)
        self.v_press_drag_end_p_x = QtWidgets.QLineEdit(self.press_drag_test)
        self.v_press_drag_end_p_x.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_drag_end_p_x.setObjectName("v_press_drag_end_p_x")
        self.press_drag_test1.addWidget(self.v_press_drag_end_p_x, 1, 1, 1, 1)
        self.v_press_drag_start_p_y = QtWidgets.QLineEdit(self.press_drag_test)
        self.v_press_drag_start_p_y.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_drag_start_p_y.setObjectName("v_press_drag_start_p_y")
        self.press_drag_test1.addWidget(self.v_press_drag_start_p_y, 0, 2, 1, 1)
        self.press_drag_start_p = QtWidgets.QLabel(self.press_drag_test)
        self.press_drag_start_p.setObjectName("press_drag_start_p")
        self.press_drag_test1.addWidget(self.press_drag_start_p, 0, 0, 1, 1)
        self.v_press_drag_p_time_3 = QtWidgets.QLineEdit(self.press_drag_test)
        self.v_press_drag_p_time_3.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_drag_p_time_3.setObjectName("v_press_drag_p_time_3")
        self.press_drag_test1.addWidget(self.v_press_drag_p_time_3, 5, 1, 1, 1)
        self.press_drag_num = QtWidgets.QLabel(self.press_drag_test)
        self.press_drag_num.setObjectName("press_drag_num")
        self.press_drag_test1.addWidget(self.press_drag_num, 2, 0, 1, 1)
        self.v_press_drag_start_p_x = QtWidgets.QLineEdit(self.press_drag_test)
        self.v_press_drag_start_p_x.setMinimumSize(QtCore.QSize(0, 30))
        self.v_press_drag_start_p_x.setObjectName("v_press_drag_start_p_x")
        self.press_drag_test1.addWidget(self.v_press_drag_start_p_x, 0, 1, 1, 1)
        self.press_drag_end_p = QtWidgets.QLabel(self.press_drag_test)
        self.press_drag_end_p.setObjectName("press_drag_end_p")
        self.press_drag_test1.addWidget(self.press_drag_end_p, 1, 0, 1, 1)
        self.gridLayout_8.addLayout(self.press_drag_test1, 0, 0, 1, 1)
        self.tabWidget.addTab(self.press_drag_test, "")
        self.randomTest = QtWidgets.QWidget()
        self.randomTest.setObjectName("randomTest")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.randomTest)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(170, 120, 311, 61))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.randomTestNum = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.randomTestNum.setFont(font)
        self.randomTestNum.setObjectName("randomTestNum")
        self.horizontalLayout_5.addWidget(self.randomTestNum)
        self.randomTestNumValue = QtWidgets.QSpinBox(self.horizontalLayoutWidget)
        self.randomTestNumValue.setMinimumSize(QtCore.QSize(120, 30))
        self.randomTestNumValue.setMaximumSize(QtCore.QSize(120, 30))
        self.randomTestNumValue.setObjectName("randomTestNumValue")
        self.horizontalLayout_5.addWidget(self.randomTestNumValue)
        self.tabWidget.addTab(self.randomTest, "")
        self.layoutWidget7 = QtWidgets.QWidget(Add_test)
        self.layoutWidget7.setGeometry(QtCore.QRect(410, 610, 264, 42))
        self.layoutWidget7.setObjectName("layoutWidget7")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget7)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.deleteButton = QtWidgets.QPushButton(self.layoutWidget7)
        self.deleteButton.setMinimumSize(QtCore.QSize(0, 40))
        self.deleteButton.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.deleteButton.setFont(font)
        self.deleteButton.setObjectName("deleteButton")
        self.horizontalLayout.addWidget(self.deleteButton)
        self.finishButton = QtWidgets.QPushButton(self.layoutWidget7)
        self.finishButton.setMinimumSize(QtCore.QSize(0, 40))
        self.finishButton.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.finishButton.setFont(font)
        self.finishButton.setObjectName("finishButton")
        self.horizontalLayout.addWidget(self.finishButton)
        self.groupBox = QtWidgets.QGroupBox(Add_test)
        self.groupBox.setGeometry(QtCore.QRect(10, 400, 661, 201))
        self.groupBox.setObjectName("groupBox")
        self.currentQueueList = overload.MyCurrentQueue(self.groupBox)
        self.currentQueueList.setGeometry(QtCore.QRect(10, 20, 641, 171))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.currentQueueList.setFont(font)
        self.currentQueueList.setObjectName("currentQueueList")
        self.layoutWidget8 = QtWidgets.QWidget(Add_test)
        self.layoutWidget8.setGeometry(QtCore.QRect(420, 360, 243, 42))
        self.layoutWidget8.setObjectName("layoutWidget8")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.layoutWidget8)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.clearAssignmentButton = QtWidgets.QPushButton(self.layoutWidget8)
        self.clearAssignmentButton.setMinimumSize(QtCore.QSize(0, 40))
        self.clearAssignmentButton.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.clearAssignmentButton.setFont(font)
        self.clearAssignmentButton.setObjectName("clearAssignmentButton")
        self.horizontalLayout_2.addWidget(self.clearAssignmentButton)
        self.addToQueueButton = QtWidgets.QPushButton(self.layoutWidget8)
        self.addToQueueButton.setMinimumSize(QtCore.QSize(0, 40))
        self.addToQueueButton.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.addToQueueButton.setFont(font)
        self.addToQueueButton.setObjectName("addToQueueButton")
        self.horizontalLayout_2.addWidget(self.addToQueueButton)

        self.retranslateUi(Add_test)
        self.tabWidget.setCurrentIndex(8)
        self.deleteButton.clicked.connect(Add_test.delete_current_row)
        self.clearAssignmentButton.clicked.connect(self.v_touch_i_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_touch_num.clear)
        self.clearAssignmentButton.clicked.connect(self.v_touch_pos_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_touch_pos_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_pos_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_num.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_i_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_pos_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_touch_p1_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_touch_p2_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_touch_num.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_touch_i_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_touch_p1_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_touch_p2_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_m_touch_pos_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_m_touch_pos_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_m_touch_i_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_m_touch_loop_num.clear)
        self.clearAssignmentButton.clicked.connect(self.v_drag_p1_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_drag_p1_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_drag_p2_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_drag_p2_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_drag_num.clear)
        self.clearAssignmentButton.clicked.connect(self.v_drag_i_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_m_drag_start_p_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_m_drag_end_p_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_m_drag_end_p_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_m_drag_loop_num.clear)
        self.clearAssignmentButton.clicked.connect(self.v_m_drag_i_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_m_drag_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_m_drag_trip_i_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_drag_start_p_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_drag_start_p_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_drag_end_p_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_drag_end_p_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_drag_num.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_drag_i_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_r_drag_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_drag_start_p_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_drag_start_p_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_drag_end_p_x.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_drag_end_p_y.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_drag_num.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_drag_p_time.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_drag_p_time_2.clear)
        self.clearAssignmentButton.clicked.connect(self.v_press_drag_p_time_3.clear)
        self.multiTouchNextPointButton.clicked.connect(Add_test.mul_touch_next_p)
        self.confirmMultiTouchTestButton.clicked.connect(Add_test.confirm_m_touch_p_num)
        self.clearAssignmentButton.clicked.connect(self.confirmMultiTouchTestButton.show)
        self.clearAssignmentButton.clicked.connect(self.v_m_drag_num.show)
        self.clearAssignmentButton.clicked.connect(self.confirmMultiDragButton.show)
        self.confirmMultiDragButton.clicked.connect(Add_test.confirm_m_drag_num)
        self.clearAssignmentButton.clicked.connect(self.v_m_touch_point_num.show)
        self.multiDragNextButton.clicked.connect(Add_test.mul_drag_next_l)
        self.clearAssignmentButton.clicked.connect(Add_test.reset_point_no)
        self.clearAssignmentButton.clicked.connect(Add_test.reset_drag_no)
        self.addToQueueButton.clicked.connect(Add_test.add_new_test_b)
        self.finishButton.clicked.connect(Add_test.fin_queue_edit)
        self.clearAssignmentButton.clicked.connect(self.v_m_drag_start_p_y.clear)
        QtCore.QMetaObject.connectSlotsByName(Add_test)
        Add_test.setTabOrder(self.v_r_drag_start_p_x, self.v_touch_pos_y)
        Add_test.setTabOrder(self.v_touch_pos_y, self.v_touch_num)
        Add_test.setTabOrder(self.v_touch_num, self.v_touch_i_time)
        Add_test.setTabOrder(self.v_touch_i_time, self.v_press_pos_x)
        Add_test.setTabOrder(self.v_press_pos_x, self.v_press_pos_y)
        Add_test.setTabOrder(self.v_press_pos_y, self.v_press_time)
        Add_test.setTabOrder(self.v_press_time, self.v_press_num)
        Add_test.setTabOrder(self.v_press_num, self.v_press_i_time)
        Add_test.setTabOrder(self.v_press_i_time, self.v_m_touch_point_num)
        Add_test.setTabOrder(self.v_m_touch_point_num, self.v_m_touch_pos_x)
        Add_test.setTabOrder(self.v_m_touch_pos_x, self.v_m_touch_pos_y)
        Add_test.setTabOrder(self.v_m_touch_pos_y, self.v_m_touch_i_time)
        Add_test.setTabOrder(self.v_m_touch_i_time, self.v_m_touch_loop_num)
        Add_test.setTabOrder(self.v_m_touch_loop_num, self.v_r_touch_p1_x)
        Add_test.setTabOrder(self.v_r_touch_p1_x, self.v_r_touch_p1_y)
        Add_test.setTabOrder(self.v_r_touch_p1_y, self.v_r_touch_p2_x)
        Add_test.setTabOrder(self.v_r_touch_p2_x, self.v_r_touch_p2_y)
        Add_test.setTabOrder(self.v_r_touch_p2_y, self.v_r_touch_num)
        Add_test.setTabOrder(self.v_r_touch_num, self.v_r_touch_i_time)
        Add_test.setTabOrder(self.v_r_touch_i_time, self.v_drag_p1_x)
        Add_test.setTabOrder(self.v_drag_p1_x, self.v_drag_p1_y)
        Add_test.setTabOrder(self.v_drag_p1_y, self.v_drag_p2_x)
        Add_test.setTabOrder(self.v_drag_p2_x, self.v_drag_p2_y)
        Add_test.setTabOrder(self.v_drag_p2_y, self.v_drag_num)
        Add_test.setTabOrder(self.v_drag_num, self.v_drag_i_time)
        Add_test.setTabOrder(self.v_drag_i_time, self.v_m_drag_num)
        Add_test.setTabOrder(self.v_m_drag_num, self.confirmMultiDragButton)
        Add_test.setTabOrder(self.confirmMultiDragButton, self.v_m_drag_start_p_x)
        Add_test.setTabOrder(self.v_m_drag_start_p_x, self.v_m_drag_end_p_x)
        Add_test.setTabOrder(self.v_m_drag_end_p_x, self.v_m_drag_end_p_y)
        Add_test.setTabOrder(self.v_m_drag_end_p_y, self.v_m_drag_loop_num)
        Add_test.setTabOrder(self.v_m_drag_loop_num, self.v_m_drag_i_time)
        Add_test.setTabOrder(self.v_m_drag_i_time, self.v_m_drag_time)
        Add_test.setTabOrder(self.v_m_drag_time, self.v_m_drag_trip_i_time)
        Add_test.setTabOrder(self.v_m_drag_trip_i_time, self.v_press_drag_p_time_3)
        Add_test.setTabOrder(self.v_press_drag_p_time_3, self.v_press_drag_p_time)
        Add_test.setTabOrder(self.v_press_drag_p_time, self.v_press_drag_p_time_2)
        Add_test.setTabOrder(self.v_press_drag_p_time_2, self.multiDragNextButton)
        Add_test.setTabOrder(self.multiDragNextButton, self.v_press_drag_start_p_x)
        Add_test.setTabOrder(self.v_press_drag_start_p_x, self.deleteButton)
        Add_test.setTabOrder(self.deleteButton, self.currentQueueList)
        Add_test.setTabOrder(self.currentQueueList, self.finishButton)
        Add_test.setTabOrder(self.finishButton, self.tabWidget)
        Add_test.setTabOrder(self.tabWidget, self.clearAssignmentButton)
        Add_test.setTabOrder(self.clearAssignmentButton, self.addToQueueButton)
        Add_test.setTabOrder(self.addToQueueButton, self.v_r_drag_time)
        Add_test.setTabOrder(self.v_r_drag_time, self.v_r_drag_end_p_x)
        Add_test.setTabOrder(self.v_r_drag_end_p_x, self.multiTouchNextPointButton)
        Add_test.setTabOrder(self.multiTouchNextPointButton, self.v_r_drag_start_p_y)
        Add_test.setTabOrder(self.v_r_drag_start_p_y, self.v_press_drag_num)
        Add_test.setTabOrder(self.v_press_drag_num, self.v_touch_pos_x)
        Add_test.setTabOrder(self.v_touch_pos_x, self.confirmMultiTouchTestButton)
        Add_test.setTabOrder(self.confirmMultiTouchTestButton, self.v_press_drag_end_p_x)
        Add_test.setTabOrder(self.v_press_drag_end_p_x, self.v_press_drag_start_p_y)
        Add_test.setTabOrder(self.v_press_drag_start_p_y, self.v_r_drag_i_time)
        Add_test.setTabOrder(self.v_r_drag_i_time, self.v_r_drag_num)
        Add_test.setTabOrder(self.v_r_drag_num, self.v_press_drag_end_p_y)
        Add_test.setTabOrder(self.v_press_drag_end_p_y, self.v_r_drag_end_p_y)

    def retranslateUi(self, Add_test):
        _translate = QtCore.QCoreApplication.translate
        Add_test.setWindowTitle(_translate("Add_test", "Dialog"))
        self.tabWidget.setWhatsThis(_translate("Add_test", "<html><head/><body><p><br/></p></body></html>"))
        self.v_touch_pos_y.setPlaceholderText(_translate("Add_test", "Y坐标(必填)"))
        self.touch_num.setWhatsThis(_translate("Add_test", "<html><head/><body><p>点击的次数。取值范围为&gt;=1的整数。不填默认为1。单位为次。</p></body></html>"))
        self.touch_num.setText(_translate("Add_test", "点击的次数："))
        self.v_touch_pos_x.setPlaceholderText(_translate("Add_test", "X坐标(必填)"))
        self.touch_i_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>两次点击间隔时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.touch_i_time.setText(_translate("Add_test", "两次点击间隔时间："))
        self.v_touch_num.setPlaceholderText(_translate("Add_test", "1"))
        self.v_touch_i_time.setPlaceholderText(_translate("Add_test", "1"))
        self.touch_pos.setWhatsThis(_translate("Add_test", "<html><head/><body><p>点击点的坐标(X,Y)。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.touch_pos.setText(_translate("Add_test", "点的坐标:(X,Y):"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.single_point_touch_test), _translate("Add_test", "单点点击测试"))
        self.press_num.setWhatsThis(_translate("Add_test", "<html><head/><body><p>长按的次数。取值范围为&gt;=1的整数。不填默认为1。单位为次。</p><p><br/></p></body></html>"))
        self.press_num.setText(_translate("Add_test", "长按的次数："))
        self.v_press_pos_y.setPlaceholderText(_translate("Add_test", "Y坐标(必填)"))
        self.v_press_pos_x.setPlaceholderText(_translate("Add_test", "X坐标(必填)"))
        self.v_press_num.setPlaceholderText(_translate("Add_test", "1"))
        self.press_pos.setWhatsThis(_translate("Add_test", "<html><head/><body><p>长按点的坐标(X,Y)。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.press_pos.setText(_translate("Add_test", "点的坐标:(X,Y)(必填)"))
        self.v_press_time.setPlaceholderText(_translate("Add_test", "1"))
        self.press_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>长按持续时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.press_time.setText(_translate("Add_test", "长按持续时间"))
        self.v_press_i_time.setPlaceholderText(_translate("Add_test", "1"))
        self.press_i_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>两次长按间隔时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.press_i_time.setText(_translate("Add_test", "两次长按间隔时间："))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.single_point_press_test), _translate("Add_test", "单点长按测试"))
        self.v_m_touch_pos_x.setPlaceholderText(_translate("Add_test", "X坐标(必填)"))
        self.v_m_touch_pos_y.setPlaceholderText(_translate("Add_test", "X坐标(必填)"))
        self.multiTouchNextPointButton.setText(_translate("Add_test", "确认并输入下一个点"))
        self.m_touch_point_num.setWhatsThis(_translate("Add_test", "<html><head/><body><p>多次点击测试终点击点的个数，调整个数之后必须点击确定，以确定个数。</p></body></html>"))
        self.m_touch_point_num.setText(_translate("Add_test", "点击点的个数："))
        self.confirmMultiTouchTestButton.setText(_translate("Add_test", "确定"))
        self.pointSelectComboBox.setWhatsThis(_translate("Add_test", "设置多点点击的point的个数数后，可以在这里编辑每个点的信息\n"
"如果没有设置好每个点的坐标，会有相应提示，请补充完成"))
        self.pointSelectComboBox.setItemText(0, _translate("Add_test", "未确认点的个数(必填)"))
        self.m_touch_i_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>两次点击间隔时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.m_touch_i_time.setText(_translate("Add_test", "两次点击间隔时间："))
        self.v_m_touch_i_time.setPlaceholderText(_translate("Add_test", "1"))
        self.m_touch_loop_num.setWhatsThis(_translate("Add_test", "<html><head/><body><p>执行循环的次数。取值范围为&gt;=1的整数。不填默认为1。单位为次。</p><p><br/></p></body></html>"))
        self.m_touch_loop_num.setText(_translate("Add_test", "循环的遍数："))
        self.v_m_touch_loop_num.setPlaceholderText(_translate("Add_test", "1"))
        self.m_touch_loop_i_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>两次循环间隔时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.m_touch_loop_i_time.setText(_translate("Add_test", "循环间隔时间："))
        self.v_m_touch_loop_i_time.setPlaceholderText(_translate("Add_test", "1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.multi_touch_test), _translate("Add_test", "多点点击测试"))
        self.r_touch_p2.setWhatsThis(_translate("Add_test", "<html><head/><body><p>范围顶点2的坐标(X,Y)。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.r_touch_p2.setText(_translate("Add_test", "随机范围顶点2"))
        self.r_touch_p1.setWhatsThis(_translate("Add_test", "<html><head/><body><p>范围顶点1的坐标(X,Y)。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.r_touch_p1.setText(_translate("Add_test", "随机范围顶点1"))
        self.v_r_touch_p2_y.setPlaceholderText(_translate("Add_test", "（矩形为随机的范围）"))
        self.v_r_touch_p2_x.setPlaceholderText(_translate("Add_test", "（输入的两个顶点构成一个矩形）"))
        self.v_r_touch_p1_x.setPlaceholderText(_translate("Add_test", "（前两行都为空默认全屏随机）"))
        self.r_touch_num.setWhatsThis(_translate("Add_test", "<html><head/><body><p>点击的次数。取值范围为&gt;=1的整数。不填默认为1。单位为次。</p></body></html>"))
        self.r_touch_num.setText(_translate("Add_test", "点击次数："))
        self.r_touch_i_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>两次点击间隔时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.r_touch_i_time.setText(_translate("Add_test", "两次点击间隔时间："))
        self.v_r_touch_i_time.setPlaceholderText(_translate("Add_test", "1"))
        self.v_r_touch_num.setPlaceholderText(_translate("Add_test", "1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.random_touch_test), _translate("Add_test", "随机点击测试"))
        self.v_drag_p2_y.setPlaceholderText(_translate("Add_test", "Y坐标(必填)"))
        self.drag_p1.setWhatsThis(_translate("Add_test", "<html><head/><body><p>起点的坐标(X,Y)。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.drag_p1.setText(_translate("Add_test", "起点坐标：(X,Y)"))
        self.v_drag_p2_x.setPlaceholderText(_translate("Add_test", "X坐标(必填)"))
        self.v_drag_p1_y.setPlaceholderText(_translate("Add_test", "Y坐标(必填)"))
        self.drag_i_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>两次滑动间隔时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.drag_i_time.setText(_translate("Add_test", "两次滑动间隔时间："))
        self.v_drag_p1_x.setPlaceholderText(_translate("Add_test", "X坐标(必填)"))
        self.drag_num.setWhatsThis(_translate("Add_test", "<html><head/><body><p>滑动的次数。取值范围为&gt;=1的整数。不填默认为1。单位为次。</p></body></html>"))
        self.drag_num.setText(_translate("Add_test", "滑动次数："))
        self.v_drag_num.setPlaceholderText(_translate("Add_test", "1"))
        self.drag_p2.setWhatsThis(_translate("Add_test", "<html><head/><body><p>终点的坐标(X,Y)。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.drag_p2.setText(_translate("Add_test", "终点坐标：(X,Y)"))
        self.v_drag_i_time.setPlaceholderText(_translate("Add_test", "1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.drag_test), _translate("Add_test", "单线滑动测试"))
        self.v_m_drag_start_p_x.setPlaceholderText(_translate("Add_test", "(左侧选择已输入的点)"))
        self.v_m_drag_end_p_x.setPlaceholderText(_translate("Add_test", "X坐标(必填)(上同)"))
        self.v_m_drag_loop_num.setPlaceholderText(_translate("Add_test", "1"))
        self.v_m_drag_i_time.setPlaceholderText(_translate("Add_test", "1"))
        self.v_m_drag_time.setPlaceholderText(_translate("Add_test", "1"))
        self.v_m_drag_trip_i_time.setPlaceholderText(_translate("Add_test", "1"))
        self.v_m_drag_end_p_y.setPlaceholderText(_translate("Add_test", "Y坐标(必填)(上同)"))
        self.v_m_drag_start_p_y.setPlaceholderText(_translate("Add_test", "（可以编辑对应信息）"))
        self.m_drag_trip_i_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>该输入框设置的是遍与遍之间的滑动间隔，即一遍的n次滑动结束以后，直到下一个n次滑动开始的间隔。针对一个点的点击测试。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.m_drag_trip_i_time.setText(_translate("Add_test", "两遍滑动间隔时间："))
        self.m_drag_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>每次滑动时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.m_drag_time.setText(_translate("Add_test", "每次滑动持续时间："))
        self.m_drag_i_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>两次滑动间隔时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.m_drag_i_time.setText(_translate("Add_test", "两次滑动间隔时间："))
        self.m_drag_loop_num.setWhatsThis(_translate("Add_test", "<html><head/><body><p>滑动循环的遍数。取值范围为&gt;=1的整数。不填默认为1。单位为次。</p></body></html>"))
        self.m_drag_loop_num.setText(_translate("Add_test", "滑动循环的遍数："))
        self.m_drag_num.setWhatsThis(_translate("Add_test", "<html><head/><body><p>一遍内滑动的次数。取值范围为&gt;=1的整数。调整数字后必须点击确定按钮。单位为次。</p></body></html>"))
        self.m_drag_num.setText(_translate("Add_test", "一遍内滑动的次数：                "))
        self.confirmMultiDragButton.setText(_translate("Add_test", "确定"))
        self.multiDragNextButton.setText(_translate("Add_test", "确认并输入下个"))
        self.dragSelectComboBox.setWhatsThis(_translate("Add_test", "设置多点点击的point的个数数后，可以在这里编辑每个点的信息\n"
"如果没有设置好每个点的坐标，会有相应提示，请补充完成"))
        self.dragSelectComboBox.setItemText(0, _translate("Add_test", "待输入"))
        self.m_drag_start_p.setWhatsThis(_translate("Add_test", "<html><head/><body><p>起点的坐标(X,Y)。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.m_drag_start_p.setText(_translate("Add_test", "起点坐标:(X,Y)"))
        self.m_drag_end_p.setWhatsThis(_translate("Add_test", "<html><head/><body><p>终点的坐标(X,Y)。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.m_drag_end_p.setText(_translate("Add_test", "终点坐标:(X,Y)"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.multi_drag_test), _translate("Add_test", "多线滑动测试"))
        self.v_r_drag_i_time.setPlaceholderText(_translate("Add_test", "1"))
        self.r_drag_num.setWhatsThis(_translate("Add_test", "<html><head/><body><p>滑动次数。取值范围为&gt;=1的整数。不填默认为1。单位为次。</p></body></html>"))
        self.r_drag_num.setText(_translate("Add_test", "滑动次数："))
        self.v_r_drag_time.setPlaceholderText(_translate("Add_test", "1"))
        self.randomDragLeftDownPoint.setWhatsThis(_translate("Add_test", "<html><head/><body><p>随机范围是一个矩形，这是这个矩形左下角点的坐标，输入(X,Y)形式。针对一个点的点击测试。点击点的坐标(X,Y)。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.randomDragLeftDownPoint.setText(_translate("Add_test", "随机范围顶点1"))
        self.r_drag_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>滑动时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.r_drag_time.setText(_translate("Add_test", "滑动时间："))
        self.v_r_drag_start_p_x.setPlaceholderText(_translate("Add_test", "（前两行都为空默认全屏随机）"))
        self.v_r_drag_end_p_y.setPlaceholderText(_translate("Add_test", "（矩形为随机的范围）"))
        self.v_r_drag_num.setPlaceholderText(_translate("Add_test", "1"))
        self.r_drag_i_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>两次滑动间隔时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.r_drag_i_time.setText(_translate("Add_test", "两次滑动间隔时间："))
        self.randomDragRightUpPoint.setWhatsThis(_translate("Add_test", "<html><head/><body><p>随机范围是一个矩形，这是这个矩形右下角点的坐标，输入(X,Y)形式。针对一个点的点击测试。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.randomDragRightUpPoint.setText(_translate("Add_test", "随机范围顶点2"))
        self.v_r_drag_end_p_x.setPlaceholderText(_translate("Add_test", "（输入的两个顶点构成一个矩形）"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.random_drag_test), _translate("Add_test", "随机滑动测试"))
        self.press_drag_i_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>两次动作间隔时间。一次按住加滑动算一个动作，两次动作的间隔。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.press_drag_i_time.setText(_translate("Add_test", "两次动作间隔时间："))
        self.press_drag_d_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>滑动持续的时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.press_drag_d_time.setText(_translate("Add_test", "滑动时间："))
        self.press_drag_p_time.setWhatsThis(_translate("Add_test", "<html><head/><body><p>长按持续的时间。取值范围为&gt;0的浮点数。不填默认为1。单位为秒。</p></body></html>"))
        self.press_drag_p_time.setText(_translate("Add_test", "长按时间："))
        self.v_press_drag_p_time_2.setPlaceholderText(_translate("Add_test", "1"))
        self.v_press_drag_p_time.setPlaceholderText(_translate("Add_test", "1"))
        self.v_press_drag_num.setPlaceholderText(_translate("Add_test", "1"))
        self.v_press_drag_end_p_y.setPlaceholderText(_translate("Add_test", "Y坐标(必填)"))
        self.v_press_drag_end_p_x.setPlaceholderText(_translate("Add_test", "X坐标(必填)"))
        self.v_press_drag_start_p_y.setPlaceholderText(_translate("Add_test", "Y坐标(必填)"))
        self.press_drag_start_p.setWhatsThis(_translate("Add_test", "<html><head/><body><p>按住点的坐标(X,Y)。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.press_drag_start_p.setText(_translate("Add_test", "按住点的坐标：(X,Y)"))
        self.v_press_drag_p_time_3.setPlaceholderText(_translate("Add_test", "1"))
        self.press_drag_num.setWhatsThis(_translate("Add_test", "<html><head/><body><p>长按滑动的次数。取值范围为&gt;=1的整数。不填默认为1。单位为次。</p></body></html>"))
        self.press_drag_num.setText(_translate("Add_test", "长按滑动次数："))
        self.v_press_drag_start_p_x.setPlaceholderText(_translate("Add_test", "X坐标(必填)"))
        self.press_drag_end_p.setWhatsThis(_translate("Add_test", "<html><head/><body><p>终点的坐标(X,Y)。X的取值范围为(0,分辨率X)，Y的取值范围为(0,分辨率Y)。</p></body></html>"))
        self.press_drag_end_p.setText(_translate("Add_test", "终点坐标：(X,Y)"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.press_drag_test), _translate("Add_test", "长按滑动测试"))
        self.randomTestNum.setWhatsThis(_translate("Add_test", "<html><head/><body><p>随机产生前面各种类型的测试，单位为个。</p></body></html>"))
        self.randomTestNum.setText(_translate("Add_test", "随机测试项个数："))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.randomTest), _translate("Add_test", "完全随机测试"))
        self.deleteButton.setText(_translate("Add_test", "删除"))
        self.finishButton.setWhatsThis(_translate("Add_test", "注意：创建完成后将不可修改"))
        self.finishButton.setText(_translate("Add_test", " 测试队列创建完成"))
        self.groupBox.setTitle(_translate("Add_test", "当前测试队列"))
        self.clearAssignmentButton.setText(_translate("Add_test", "清除参数"))
        self.addToQueueButton.setText(_translate("Add_test", "加入测试队列"))

